<UserControl x:Class="Opus.Modules.Action.Views.CompositionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:resButtons="clr-namespace:Opus.Resources.Buttons.Composition;assembly=Opus.Resources"
             xmlns:resLabels="clr-namespace:Opus.Resources.Labels;assembly=Opus.Resources"
             xmlns:resToolTips="clr-namespace:Opus.Resources.ToolTips.Composition;assembly=Opus.Resources"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/CompositionDataTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type Button}" x:Key="ToolButton"
                   BasedOn="{StaticResource MaterialDesignIconButton}">
                <Setter Property="Margin" Value="5, 16, 5, 0"/>
            </Style>
            <Style TargetType="MenuItem" x:Key="ProfilePopupMenuItem"
                   BasedOn="{StaticResource MaterialDesignMenuItem}">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueLightBrush}"/>
            </Style>
            <CollectionViewSource x:Key="ProfileSource"
                                  Source="{Binding Properties.Profiles}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="IsEditable"/>
                    <scm:SortDescription PropertyName="ProfileName" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              HorizontalAlignment="Center"
              Width="{Binding ElementName=SegmentsList, Path=ActualWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" 
                        Grid.Column="0">
                <Button Style="{StaticResource ToolButton}"
                        Command="{Binding Commands.OpenProfileMenuCommand}"
                        Margin="0">
                    <materialDesign:PopupBox PlacementMode="TopAndAlignCentres" StaysOpen="False"
                                             IsPopupOpen="{Binding Properties.AddProfileMenuOpen}"
                                             ToolTip="{x:Static resToolTips:Buttons.ProfilePopup}"
                                             Padding="0">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Kind="NotePlus" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        </materialDesign:PopupBox.ToggleContent>
                        <Menu Background="#FF0F1316">
                            <Menu.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </Menu.ItemsPanel>
                            <MenuItem Header="{x:Static resButtons:Menus.NewProfile}"
                                      Command="{Binding Commands.AddProfileCommand}"
                                      Style="{StaticResource ProfilePopupMenuItem}"/>
                            <MenuItem Header="{x:Static resButtons:Menus.CopyProfile}"
                                      Command="{Binding Commands.CopyProfileCommand}"
                                      Style="{StaticResource ProfilePopupMenuItem}"/>
                            <MenuItem Header="{x:Static resButtons:Menus.ImportProfile}"
                                      Command="{Binding Commands.ImportProfileCommand}"
                                      Style="{StaticResource ProfilePopupMenuItem}"/>
                            <MenuItem Header="{x:Static resButtons:Menus.ExportProfile}"
                                      Command="{Binding Commands.ExportProfileCommand}"
                                      Style="{StaticResource ProfilePopupMenuItem}"/>
                        </Menu>
                    </materialDesign:PopupBox>
                </Button>
            </StackPanel>
            <ComboBox Style="{DynamicResource MaterialDesignFloatingHintComboBox}"
                      Grid.Column="2"
                      materialDesign:HintAssist.Hint="{x:Static resLabels:General.Profile}"
                      materialDesign:HintAssist.FloatingOffset="0, -22"
                      materialDesign:HintAssist.FloatingScale="0.9"
                      FontSize="16"
                      Margin="8, 0, 8, 10"
                      materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                      SelectedItem="{Binding Properties.SelectedProfile, Mode=TwoWay}"
                      ItemsSource="{Binding Source={StaticResource ProfileSource}}"
                      VerticalAlignment="Center"
                      VerticalContentAlignment="Bottom"
                      HorizontalContentAlignment="Left">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock TextTrimming="CharacterEllipsis"
                                   Text="{Binding ProfileName}"
                                   FontWeight="{Binding IsEditable, Converter={StaticResource NegativeToBold}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <StackPanel Orientation="Horizontal" Grid.Column="4">
                <Button Style="{StaticResource ToolButton}"
                        Command="{Binding Commands.EditProfileCommand}"
                        IsEnabled="{Binding Properties.SelectedProfile.IsEditable}"
                        Margin="0"
                        ToolTip="{x:Static resToolTips:Buttons.ProfileEditButton}">
                    <materialDesign:PackIcon Kind="Pencil"/>
                </Button>
                <Button Style="{StaticResource ToolButton}"
                        Command="{Binding Commands.DeleteProfileCommand}"
                        IsEnabled="{Binding Properties.SelectedProfile.IsEditable}"
                        Margin="0"
                        ToolTip="{x:Static resToolTips:Buttons.DeleteProfileButton}">
                    <materialDesign:PackIcon Kind="Delete"/>
                </Button>

            </StackPanel>
        </Grid>

        <Grid Grid.Row="2"
              Margin="10, 15, 10, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0"
                       Text="{x:Static resLabels:General.Name}" TextAlignment="Left"
                       Style="{StaticResource SegmentHeaderText}"/>
        </Grid>

        <Separator Grid.Row="3" Margin="10, 10, 10, 10"/>

        <Grid Grid.Row="4">
            <TextBlock Style="{DynamicResource MaterialDesignSubtitle1TextBlock}"
                       Text="{x:Static resLabels:General.NoContent}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       Margin="30">
                <TextBlock.Visibility>
                    <MultiBinding Converter="{StaticResource ZeroAndTrue}">
                        <Binding Path="Properties.SelectedProfile.Segments.Count"/>
                        <Binding Path="Properties.ProfileContentShow"/>
                    </MultiBinding>
                </TextBlock.Visibility>
            </TextBlock>
            <ListView ItemsSource="{Binding Properties.SelectedProfile.Segments}"
                  Style="{StaticResource SelectionList}"
                  SelectedItem="{Binding Properties.SelectedProfile.Segments.SelectedItem}"
                  SelectionMode="Single"
                  x:Name="SegmentsList">
                <ListView.InputBindings>
                    <KeyBinding Key="Up" Modifiers="Ctrl" Command="{Binding Properties.SelectedProfile.Segments.MoveUp}"/>
                    <KeyBinding Key="Down" Modifiers="Ctrl" Command="{Binding Properties.SelectedProfile.Segments.MoveDown}"/>
                    <KeyBinding Key="Left" Modifiers="Ctrl" Command="{Binding Properties.SelectedProfile.Segments.MoveLeft}"/>
                    <KeyBinding Key="Right" Modifiers="Ctrl" Command="{Binding Properties.SelectedProfile.Segments.MoveRight}"/>
                </ListView.InputBindings>
            </ListView>
        </Grid>

        <StackPanel Orientation="Horizontal" Grid.Row="5" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal"
                        IsEnabled="{Binding Properties.SelectedProfile.IsEditable}">
                <Button Style="{StaticResource ToolButton}"
                        IsEnabled="{Binding ElementName=SegmentsList, Path=SelectedItem, Converter={StaticResource NullToBool}}"
                        Command="{Binding Commands.EditSegmentCommand}"
                        ToolTip="{x:Static resToolTips:Buttons.SegmentEditButton}">
                    <materialDesign:PackIcon Kind="Pencil"/>
                </Button>
                <Rectangle Width="2" Fill="LightGray" Opacity="0.5" Margin="5, 20, 5, 5" RadiusX="2" RadiusY="2"/>
                <Button Style="{StaticResource ToolButton}" x:Name="AddSegmentButton"
                        Command="{Binding Commands.OpenSegmentMenuCommand}">
                    <materialDesign:PopupBox PlacementMode="TopAndAlignCentres" StaysOpen="False"
                                             IsPopupOpen="{Binding Properties.AddSegmentMenuOpen}"
                                             ToolTip="{x:Static resToolTips:Buttons.SegmentPopup}"
                                             Padding="0">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Kind="PlusThick" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        </materialDesign:PopupBox.ToggleContent>
                        <Menu Background="#FF0F1316">
                            <Menu.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </Menu.ItemsPanel>
                            <MenuItem Header="{x:Static resButtons:Menus.NewSegmentTitle}"
                                      Command="{Binding Commands.AddTitleSegmentCommand}"
                                      Style="{StaticResource ProfilePopupMenuItem}"/>
                            <MenuItem Header="{x:Static resButtons:Menus.NewSegmentFile}"
                                      Command="{Binding Commands.AddFileSegmentCommand}"
                                      Style="{StaticResource ProfilePopupMenuItem}"/>
                        </Menu>
                    </materialDesign:PopupBox>
                </Button>
                <Rectangle Width="2" Fill="LightGray" Opacity="0.5" Margin="5, 20, 5, 5" RadiusX="2" RadiusY="2"/>
                <Button Style="{StaticResource ToolButton}"
                        IsEnabled="{Binding ElementName=FilesList, Path=SelectedItem, Converter={StaticResource NullToBool}}"
                        Command="{Binding Commands.DeleteSegmentCommand}"
                        ToolTip="{x:Static resToolTips:Buttons.SegmentDeleteButton}">
                    <materialDesign:PackIcon Kind="Delete"/>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
