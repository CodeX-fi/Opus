<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Opus.Services</name>
    </assembly>
    <members>
        <member name="T:Opus.Services.Configuration.IConfiguration">
            <summary>
            Application configuration service
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.LanguageCode">
            <summary>
            Application language in ISO639-1 format
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.ExtractionPrefix">
            <summary>
            Prefix for extracted files
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.ExtractionSuffix">
            <summary>
            Suffix for extracted files
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.MergeAddPageNumbers">
            <summary>
            If true, page numbers will be added to a merged document
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.CompositionSearchSubDirectories">
            <summary>
            Include subdirectories when searching for composition files
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.CompositionDeleteConverted">
            <summary>
            If true, files converted to pdf during composition will be deleted. Said
            files will be deleted when cancelling, regardless of the value of this property.
            </summary>
        </member>
        <member name="P:Opus.Services.Configuration.IConfiguration.DefaultProfile">
            <summary>
            The <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/> to select by default
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.NameFromFile">
            <summary>
            Get name for segment from the filename
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.SearchExpression">
            <summary>
            The term to search files with
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.SearchExpressionString">
            <summary>
            Set the search term. Creates a compiled regex for faster searching.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.IgnoreExpression">
            <summary>
            Parts of the filename to exclude from search and final file name
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.IgnoreExpressionString">
            <summary>
            Set the part to ignore and remove. Creates a compiled regex for faster removal.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.MinCount">
            <summary>
            Minimum required number of documents fulfilling the conditions.
            0 indicates no documents matching the conditions need to be found.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.MaxCount">
            <summary>
            Maximun number of documents fulfilling the conditions.
            0 indicates an unlimited number of documents.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionFile.Example">
            <summary>
            Example file name for displaying to user
            </summary>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionFile.EvaluateFile(System.String)">
            <summary>
            Evaluate a file for a match against <see cref="P:Opus.Services.Data.Composition.ICompositionFile.SearchExpression"/>
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.CreateProfile(System.String)">
            <summary>
            Create a new <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/>
            with default settings
            </summary>
            <param name="name">Name of the profile</param>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.CreateProfile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a new <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/>
            with an empty list of segments
            </summary>
            <param name="name">Name of the profile</param>
            <param name="addPageNumbers">Add page numbers to final document</param>
            <param name="isEditable">The user can edit the profile</param>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.CreateProfile(System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{Opus.Services.Data.Composition.ICompositionSegment})">
            <summary>
            Create a new <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/>
            </summary>
            <param name="name">Name of the profile</param>
            <param name="addPageNumbers">Add page numbers to final document</param>
            <param name="isEditable">The user can edit the profile</param>
            <param name="segments">Segments in the profile</param>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.GetProfiles">
            <summary>
            Return all <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/>s from the data provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.SaveProfile(Opus.Services.Data.Composition.ICompositionProfile)">
            <summary>
            Save the <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/> with the data provider
            </summary>
            <param name="profile">Profile to save</param>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.DeleteProfile(Opus.Services.Data.Composition.ICompositionProfile)">
            <summary>
            Delete an <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/> via the data provider
            </summary>
            <param name="profile">Profile to delete</param>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.CreateFileSegment(System.String)">
            <summary>
            Create a new <see cref="T:Opus.Services.Data.Composition.ICompositionSegment"/> for files
            </summary>
            <param name="segmentName">Name of the segment</param>
            <returns></returns>
        </member>
        <member name="M:Opus.Services.Data.Composition.ICompositionOptions.CreateTitleSegment(System.String)">
            <summary>
            Create a new <see cref="T:Opus.Services.Data.Composition.ICompositionSegment"/> for a title
            </summary>
            <param name="segmentName">Name of the segment</param>
            <returns></returns>
        </member>
        <member name="T:Opus.Services.Data.Composition.ICompositionProfile">
            <summary>
            A profile for composing a pdf-document from various files and titles.
            Provides instructions on how to compose the final file. May be exported
            to a JSON-based file and imported from said file type.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionProfile.ProfileName">
            <summary>
            Name of the profile.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionProfile.Segments">
            <summary>
            Segments in the current profile in the order they
            are to be included. Segments include information on the title,
            search criteria and number of files to include, among other things.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionProfile.AddPageNumbers">
            <summary>
            If true, page numbers will be added to the final product.
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionProfile.IsEditable">
            <summary>
            If true, the user can edit this profile. Uneditable profiles can be created by the
            administrator to prevent users from changing their content. This property does not
            prevent tampering with the profile directly in the database.
            </summary>
        </member>
        <member name="T:Opus.Services.Data.Composition.ICompositionSegment">
            <summary>
            A segment of a <see cref="T:Opus.Services.Data.Composition.ICompositionProfile"/>
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionSegment.DisplayName">
            <summary>
            Name to display to the user
            </summary>
        </member>
        <member name="P:Opus.Services.Data.Composition.ICompositionSegment.SegmentName">
            <summary>
            Name of the segment
            </summary>
        </member>
        <member name="T:Opus.Services.Data.IDataObject">
            <summary>
            Provides constraints on types used as data models
            </summary>
        </member>
        <member name="P:Opus.Services.Data.IDataObject.Id">
            <summary>
            Unique identifier of object instance
            </summary>
        </member>
        <member name="T:Opus.Services.Data.IDataProvider">
            <summary>
            Provides methods for saving, deleting and retrieving data
            </summary>
        </member>
        <member name="M:Opus.Services.Data.IDataProvider.GetAll``1">
            <summary>
            Get all data of a specific type
            </summary>
            <typeparam name="T">Type of data</typeparam>
            <returns>All data</returns>
        </member>
        <member name="M:Opus.Services.Data.IDataProvider.GetOne``1(``0)">
            <summary>
            Find an object.
            </summary>
            <typeparam name="T">Type of the object to find</typeparam>
            <param name="instance">Type instance</param>
            <returns>Found object. If no matching object found, return default(T).</returns>
        </member>
        <member name="M:Opus.Services.Data.IDataProvider.GetOneById``1(System.Int32)">
            <summary>
            Find an object by it's id
            </summary>
            <typeparam name="T">Type of object to find</typeparam>
            <param name="id">Id of object</param>
            <returns>Found object. If no matching object found, return default(T)</returns>
        </member>
        <member name="M:Opus.Services.Data.IDataProvider.Save``1(``0)">
            <summary>
            Save a data instance
            </summary>
            <typeparam name="T">Type of data</typeparam>
            <param name="instance">Type instance to save</param>
            <returns>Saved instance</returns>
        </member>
        <member name="M:Opus.Services.Data.IDataProvider.Delete``1(``0)">
            <summary>
            Delete a data instance
            </summary>
            <typeparam name="T">Type of data</typeparam>
            <param name="instance">Type instance to delete</param>
            <returns>Deleted instance</returns>
        </member>
        <member name="M:Opus.Services.Data.IDataProvider.Clear``1">
            <summary>
            Clear all data of a type
            </summary>
            <typeparam name="T">Type to clear</typeparam>
        </member>
        <member name="P:Opus.Services.Data.ISignatureOptions.Suffix">
            <summary>
            The localized suffix for unsigned files
            </summary>
        </member>
        <member name="T:Opus.Services.Input.IPathSelection">
            <summary>
            Get user input for file and directory paths
            </summary>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenFile(System.String)">
            <summary>
            Ask the user for a file path of any file
            </summary>
            <param name="description">Description for file selection</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenFile(System.String,Opus.Services.Input.FileType)">
            <summary>
            Ask the user for a file path of a particular file type
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileType">Type of the file</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenFile(System.String,System.Collections.Generic.IEnumerable{Opus.Services.Input.FileType})">
            <summary>
            Ask the user for a file path of a file of any of the given types
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileTypes">Accepted types</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenFiles(System.String)">
            <summary>
            Ask the user for one or more file paths
            </summary>
            <param name="description">Description for file selection</param>
            <returns>Selected file paths. Empty, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenFiles(System.String,Opus.Services.Input.FileType)">
            <summary>
            Ask the user for one or more file paths of a given type
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileType">Type of accepted files</param>
            <returns>Selected file paths. Empty, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenFiles(System.String,System.Collections.Generic.IEnumerable{Opus.Services.Input.FileType})">
            <summary>
            Ask the user for one or more file paths of any of the given types
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileTypes">Types of accepted files</param>
            <returns>Selected file paths. Empty, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.OpenDirectory(System.String)">
            <summary>
            Ask the user for a directory path
            </summary>
            <param name="description">Description for directory selection</param>
            <returns>Selected directory path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.SaveFile(System.String)">
            <summary>
            Ask the user for a file path for saving a file of any type
            </summary>
            <param name="description">Description of file selection</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.SaveFile(System.String,System.IO.DirectoryInfo)">
            <summary>
            Ask the user for a file path for saving a file of any type
            </summary>
            <param name="description">Description of file selection</param>
            <param name="initialDirectory">Directory to start the selection from</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.SaveFile(System.String,Opus.Services.Input.FileType)">
            <summary>
            Ask the user for a file path for saving a file of a particular type
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileType">Type of accepted file</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.SaveFile(System.String,Opus.Services.Input.FileType,System.IO.DirectoryInfo)">
            <summary>
            Ask the user for a file path for saving a file of a particular type
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileType">Type of accepted file</param>
            <param name="initialDirectory">Directory to start the selection from</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="M:Opus.Services.Input.IPathSelection.SaveFile(System.String,Opus.Services.Input.FileType,System.String)">
            <summary>
            Ask the user for a file path for saving a file of a particular type
            </summary>
            <param name="description">Description for file selection</param>
            <param name="fileType">Type of accepted file</param>
            <param name="initialFile">Suggestion file location and name</param>
            <returns>Selected file path. Null, if canceled.</returns>
        </member>
        <member name="P:Opus.Services.UI.IDialogAssist.IsShowing">
            <summary>
            Indicates whether the dialog is visible
            </summary>
        </member>
        <member name="P:Opus.Services.UI.IDialogAssist.Active">
            <summary>
            Currently visible dialog
            </summary>
        </member>
        <member name="M:Opus.Services.UI.IDialogAssist.Show(Opus.Services.UI.IDialog)">
            <summary>
            Show a dialog asynchronously and return it when ready
            </summary>
            <param name="dialog">Dialog to show</param>
        </member>
        <member name="T:Opus.Services.UI.INavigationAssist">
            <summary>
            Provides service for linking schemes (identifiers for easy navigation), 
            Prism regions and views together.
            </summary>
        </member>
        <member name="M:Opus.Services.UI.INavigationAssist.Add``1(System.String,System.String[])">
            <summary>
            Associate schemes with a region and a view.
            </summary>
            <typeparam name="T">Type of the view</typeparam>
            <param name="regionName">Name of the Prism region</param>
            <param name="schemeNames">Schemes to associate the region and view with</param>
        </member>
        <member name="T:Opus.Services.UI.INavigationTarget">
            <summary>
            Service for navigation targets of <see cref="T:Opus.Services.UI.INavigationAssist"/>
            </summary>
        </member>
        <member name="M:Opus.Services.UI.INavigationTarget.OnArrival">
            <summary>
            Operations to perform when navigated to by <see cref="T:Opus.Services.UI.INavigationAssist"/>
            </summary>
        </member>
        <member name="M:Opus.Services.UI.INavigationTarget.WhenLeaving">
            <summary>
            Operations to perform when navigated from by <see cref="T:Opus.Services.UI.INavigationAssist"/>
            </summary>
        </member>
        <member name="E:Opus.Services.UI.ReorderCollection`1.CollectionReordered">
            <summary>
            Occurs when the collection has been reordered.
            </summary>
        </member>
    </members>
</doc>
