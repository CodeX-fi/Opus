<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dialog="clr-namespace:Opus.Services.Implementation.UI.Dialogs;assembly=Opus.Services.Implementation"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:resButtons="clr-namespace:Opus.Resources.Buttons;assembly=Opus.Resources"
                    xmlns:resDialog="clr-namespace:Opus.Resources.Labels.Dialogs;assembly=Opus.Resources"
                    xmlns:resLabels="clr-namespace:Opus.Resources.Labels;assembly=Opus.Resources"
                    xmlns:resValidation="clr-namespace:Opus.Resources.Validation;assembly=Opus.Resources">

    <!--MESSAGE DIALOG-->
    <DataTemplate DataType="{x:Type dialog:MessageDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBlock Style="{DynamicResource DialogContentTextBlock}"
                       Text="{Binding Content}"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogOkButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- CONFIRMATION DIALOG-->
    <DataTemplate DataType="{x:Type dialog:ConfirmationDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBlock Style="{DynamicResource DialogContentTextBlock}"
                       Text="{Binding Content}"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"
                        Content="{x:Static resButtons:General.Confirm}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--FILE TITLE DIALOG-->
    <DataTemplate DataType="{x:Type dialog:FileTitleDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedValidationTextBox}"
                     Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     FontSize="16"
                     Width="250"
                     x:Name="TitleText"
                     md:HintAssist.Hint="{x:Static resLabels:General.Name}"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"
                        IsEnabled="{Binding ElementName=TitleText, Path=(Validation.HasError), 
                        Converter={StaticResource InvertBooleanConverter}}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--NEW BOOKMARK DIALOG-->
    <DataTemplate DataType="{x:Type dialog:BookmarkDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedTextBox}"
                     Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Width="250"
                     Name="TitleText"
                     md:ValidationAssist.Suppress="True"
                     md:HintAssist.Hint="{x:Static resLabels:General.Name}"/>
            <StackPanel Style="{StaticResource NumberFieldStackPanel}">
                <TextBox Style="{DynamicResource NumberTextBox}"
                         Text="{Binding StartPage, UpdateSourceTrigger=PropertyChanged, 
                         ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                         Width="70"
                         Name="StartPageText"
                         md:HintAssist.Hint="{x:Static resLabels:General.Start}"/>
                <Rectangle Width="2" Fill="LightGray" Opacity="0.5" Margin="5, 20, 5, 5" RadiusX="2" RadiusY="2"/>
                <TextBox Style="{DynamicResource NumberTextBox}"
                         Text="{Binding EndPage, UpdateSourceTrigger=PropertyChanged, 
                         ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                         Width="70"
                         Name="EndPageText"
                         md:HintAssist.Hint="{x:Static resLabels:General.End}"/>
            </StackPanel>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAllNegative}">
                            <Binding ElementName="TitleText" Path="(Validation.HasError)"/>
                            <Binding ElementName="StartPageText" Path="(Validation.HasError)"/>
                            <Binding ElementName="EndPageText" Path="(Validation.HasError)"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--EXTRACT SETTINGS DIALOG-->
    <DataTemplate DataType="{x:Type dialog:ExtractSettingsDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedTextBox}"
                     Text="{Binding Prefix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Width="180"
                     md:HintAssist.Hint="{x:Static resLabels:General.Prefix}"
                     md:HintAssist.HelperText="{x:Static resDialog:ExtractionOptions.PrefixHelper}"/>
            <TextBox Style="{DynamicResource HintedTextBox}"
                     Text="{Binding Suffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Width="180"
                     md:HintAssist.Hint="{x:Static resLabels:General.Suffix}"
                     md:HintAssist.HelperText="{x:Static resDialog:ExtractionOptions.SuffixHelper}"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--SIGNATURE SETTINGS DIALOG-->
    <DataTemplate DataType="{x:Type dialog:SignatureSettingsDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedValidationTextBox}"
                     Text="{Binding Suffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Width="180"
                     Name="SuffixText"
                     md:HintAssist.Hint="{x:Static resLabels:General.Suffix}"
                     md:HintAssist.HelperText="{x:Static resDialog:SignatureOptions.SuffixHelper}"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"
                        IsEnabled="{Binding ElementName=SuffixText, Path=(Validation.HasError), 
                        Converter={StaticResource InvertBooleanConverter}}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--MERGE SETTINGS DIALOG-->
    <DataTemplate DataType="{x:Type dialog:MergeSettingsDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBlock HorizontalAlignment="Center" FontWeight="Bold"
                       VerticalAlignment="Center"
                       Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                       Text="{x:Static resDialog:MergeOptions.PageNumbersTitle}"
                       Margin="0, 0, 0, 10"/>
            <CheckBox Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                      IsChecked="{Binding AddPageNumbers}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Cursor="Hand"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--COMPOSITION SETTINGS DIALOG-->
    <DataTemplate DataType="{x:Type dialog:CompositionSettingsDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBlock HorizontalAlignment="Center" FontWeight="Bold"
                       VerticalAlignment="Center"
                       Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                       Text="{x:Static resDialog:CompositionOptions.SubDirectories}"
                       Margin="0, 0, 0, 10"/>
            <CheckBox Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                      IsChecked="{Binding SearchSubDirectories, Mode=TwoWay}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Cursor="Hand"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--COMPOSITION PROFILE DIALOG-->
    <DataTemplate DataType="{x:Type dialog:CompositionProfileDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedValidationTextBox}"
                     md:HintAssist.Hint="{x:Static resLabels:General.Name}"
                     Text="{Binding ProfileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                     ValidatesOnDataErrors=True}"
                     Name="TitleText"
                     md:ValidationAssist.Suppress="{Binding SuppressError}"
                     Width="200"/>
            <Separator Style="{DynamicResource MaterialDesignSeparator}"
                       Margin="10"/>
            <TextBlock HorizontalAlignment="Center" FontWeight="Bold"
                       VerticalAlignment="Center"
                       Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                       Text="{x:Static resLabels:General.AddPageNumbers}"
                       Margin="0, 0, 0, 10"/>
            <CheckBox Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                      IsChecked="{Binding AddPageNumbers, Mode=TwoWay}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Cursor="Hand"/>
            <Separator Style="{DynamicResource MaterialDesignSeparator}"
                       Margin="10"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"
                        IsEnabled="{Binding ElementName=TitleText, Path=(Validation.HasError), 
                            Converter={StaticResource InvertBooleanConverter}}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>
    
    <!--COMPOSITION FILESEGMENT DIALOG-->
    <DataTemplate DataType="{x:Type dialog:CompositionFileSegmentDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedValidationTextBox}"
                     md:HintAssist.Hint="{x:Static resLabels:General.Name}"
                     Text="{Binding SegmentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                     ValidatesOnDataErrors=True}"
                     Name="CompositionFileTitleText"
                     Width="200"/>
            <CheckBox Style="{DynamicResource MaterialDesignCheckBox}"
                      Content="{x:Static resDialog:CompositionFileSegment.NameFromFileDescription}" 
                      FontSize="14"
                      IsChecked="{Binding NameFromFile}"
                      HorizontalAlignment="Center"
                      Margin="20, 0, 20, 10"/>
            <Separator Style="{DynamicResource MaterialDesignSeparator}"
                       Margin="10"/>
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <TextBox Style="{DynamicResource HintedTextBox}"
                             md:HintAssist.Hint="{x:Static resLabels:General.SearchExpression}"
                             Text="{Binding SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                             ValidatesOnDataErrors=True}"
                             Name="CompositionFileSearchExpressionText"
                             Width="200"/>
                    <TextBox Style="{DynamicResource HintedTextBox}"
                             md:HintAssist.Hint="{x:Static resLabels:General.IgnoreExpression}"
                             Text="{Binding ToRemove, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                             ValidatesOnDataErrors=True}"
                             Name="CompositionFileIgnoreExpressionText"
                             Width="200"/>
                </StackPanel>
                <Rectangle Width="2" Fill="LightGray" Opacity="0.5" Margin="5" RadiusX="2" RadiusY="2"/>
                <StackPanel>
                    <TextBox Style="{DynamicResource NumberTextBox}"
                             Text="{Binding MinCount, UpdateSourceTrigger=PropertyChanged}"
                             Width="70"
                             Name="CompositionFileMinCountText"
                             md:HintAssist.Hint="{x:Static resLabels:General.Minimum}"/>
                    <TextBox Style="{DynamicResource NumberTextBox}"
                             Text="{Binding MaxCount, UpdateSourceTrigger=PropertyChanged}"
                             Width="70"
                             Name="CompositionFileMaxCountText"
                             md:HintAssist.Hint="{x:Static resLabels:General.Maximum}"/>
                </StackPanel>
            </StackPanel>
            <Separator Style="{DynamicResource MaterialDesignSeparator}"
                       Margin="10, 10, 10, 0"/>
            <TextBox Style="{DynamicResource HintedValidationTextBox}"
                     md:HintAssist.Hint="{x:Static resLabels:General.Example}"
                     Text="{Binding Example, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Width="200"/>
            <Separator Style="{DynamicResource MaterialDesignSeparator}"
                       Margin="10"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAllNegative}">
                            <Binding ElementName="CompositionFileTitleText" Path="(Validation.HasError)"/>
                            <Binding ElementName="CompositionFileSearchExpressionText" Path="(Validation.HasError)"/>
                            <Binding ElementName="CompositionFileIgnoreExpressionText" Path="(Validation.HasError)"/>
                            <Binding ElementName="CompositionFileMinCountText" Path="(Validation.HasError)"/>
                            <Binding ElementName="CompositionFileMaxCountText" Path="(Validation.HasError)"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--COMPOSITION TITLESEGMENT DIALOG-->
    <DataTemplate DataType="{x:Type dialog:CompositionTitleSegmentDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding DialogTitle}"/>
            <TextBox Style="{DynamicResource HintedValidationTextBox}"
                     md:HintAssist.Hint="{x:Static resLabels:General.Name}"
                     Text="{Binding SegmentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                     ValidatesOnDataErrors=True}"
                     Name="CompositionTitleNameText"
                     Width="200"/>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"
                        IsEnabled="{Binding ElementName=CompositionTitleNameText, Path=(Validation.HasError),
                        Converter={StaticResource InvertBooleanConverter}}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--COMPOSITION FILE COUNT DIALOG-->
    <DataTemplate DataType="{x:Type dialog:CompositionFileCountDialog}">
        <StackPanel>
            <TextBlock Style="{DynamicResource DialogTitleTextBlock}"
                       Text="{Binding Segment.SegmentName}"/>
            <TextBlock Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                       FontSize="14" Width="350"
                       TextAlignment="Justify"
                       TextWrapping="Wrap"
                       Text="{Binding DialogTextContent}"
                       Margin="15, 15, 15, 0"/>
            <StackPanel Orientation="Horizontal"
                        Margin="15"
                        HorizontalAlignment="Center"
                        Visibility="{Binding SingleSelection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button Style="{DynamicResource MaterialDesignOutlinedButton}"
                        Margin="0, 0, 15, 0"
                        Width="260"
                        VerticalContentAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        ToolTip="{Binding Files[0].FilePath}"
                        Command="{Binding Files[0].OpenFile}">
                    <TextBlock FontSize="14"
                               Text="{Binding Files[0].FileName}"
                               TextTrimming="CharacterEllipsis"/>
                </Button>
                <Button Style="{DynamicResource MaterialDesignIconButton}"
                        Command="{Binding AddFile}">
                    <md:PackIcon Kind="Folder" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                </Button>
            </StackPanel>
            <Grid Margin="15, 15, 15, 0"
                  Visibility="{Binding SingleSelection, Converter={StaticResource BooleanToOppositeVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Column="0"
                            Grid.Row="0"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Center">
                    <TextBlock Style="{StaticResource SegmentHeaderText}"
                               Text="{x:Static resDialog:CompositionFileCount.FilesFound}"
                               HorizontalAlignment="Center"
                               Margin="10, 0, 10, 10"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Margin="10, 0, 10, 0">
                            <Run Text="{x:Static resDialog:CompositionFileCount.MinimumFiles}"/>
                            <Run Text="{Binding Segment.MinCount}" FontWeight="ExtraBold"/>
                        </TextBlock>
                        <TextBlock Margin="10, 0, 10, 0">
                            <Run Text="{x:Static resDialog:CompositionFileCount.MaximumFiles}"/>
                            <Run Text="{Binding Segment.MaxCount, StringFormat={}{0:#;;&#x221E;}}" FontWeight="ExtraBold"/>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
                <Separator Margin="15" Grid.Row="1" Grid.Column="0"
                           Grid.ColumnSpan="2" Style="{DynamicResource MaterialDesignSeparator}"/>
                <ListView ItemsSource="{Binding Files}"
                          Grid.Column="0"
                          Grid.Row="2"
                          Height="120"
                          Width="350"
                          SelectedItem="{Binding SelectedFile}"
                          Style="{DynamicResource SelectionList}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentControl Grid.Column="0">
                                    <TextBlock Text="{Binding FileName}"
                                               TextTrimming="CharacterEllipsis"/>
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="MouseDoubleClick">
                                            <behaviors:InvokeCommandAction Command="{Binding OpenFile}"/>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ContentControl>
                                <md:PackIcon Grid.Column="1"
                                             Margin="10, 0, 10, 0"
                                             Kind="FolderInformation"
                                             VerticalAlignment="Center"
                                             Foreground="{DynamicResource PrimaryHueMidBrush}"
                                             ToolTip="{Binding FilePath}"
                                             ToolTipService.InitialShowDelay="0"
                                             ToolTipService.ShowDuration="30000"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel VerticalAlignment="Center"
                            Grid.Column="1"
                            Grid.Row="2">
                    <Button Style="{DynamicResource MaterialDesignIconButton}"
                            Command="{Binding AddFiles}">
                        <md:PackIcon Kind="PlusThick"/>
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignIconButton}"
                            Command="{Binding RemoveFiles}">
                        <md:PackIcon Kind="MinusThick"/>
                    </Button>
                </StackPanel>
                <Separator Margin="15" Grid.Row="3" Grid.Column="0"
                           Grid.ColumnSpan="2" Style="{DynamicResource MaterialDesignSeparator}"/>
            </Grid>
            <StackPanel Style="{StaticResource DialogButtonStackPanel}">
                <Button Style="{StaticResource DialogSaveButton}"/>
                <Button Style="{StaticResource DialogCancelButton}"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--PROGRESS DIALOG-->
    <DataTemplate DataType="{x:Type dialog:ProgressDialog}">
        <StackPanel>
            <Grid Width="60" Height="60"
                  Margin="32, 32, 32, 10">
                <Ellipse Width="60"
                         Height="60"
                         Fill="Transparent"
                         Stroke="{DynamicResource MaterialDesignDarkBackground}"
                         Opacity="0.3"
                         StrokeThickness="2"/>
                <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}"
                             Width="60" Height="60"
                             Value="{Binding TotalPercent}"
                             IsIndeterminate="{Binding TotalPercent, Converter={StaticResource ZeroToTrue}}"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                             x:Name="MainProgress">
                </ProgressBar>
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding TotalPercent, StringFormat={}{0}%}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock"
                               BasedOn="{StaticResource MaterialDesignSubtitle2TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=MainProgress, Path=Value}"
                                             Value="100">
                                    <Setter Property="Opacity" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <ContentControl Content="{StaticResource LogoIconVector}" HorizontalAlignment="Center"
                                Name="Logo">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Opacity" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=MainProgress, Path=Value}"
                                             Value="100">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1" Duration="0:0:1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                    <ContentControl.Triggers>
                        <EventTrigger RoutedEvent="ContentControl.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="Logo"
                                        Storyboard.TargetProperty="Height"
                                        From="50" To="45" Duration="0:0:1.5"
                                        AutoReverse="True" RepeatBehavior="Forever"/>
                                    <DoubleAnimation
                                        Storyboard.TargetName="Logo"
                                        Storyboard.TargetProperty="Width"
                                        From="50" To="45" Duration="0:0:1.5"
                                        AutoReverse="True" RepeatBehavior="Forever"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ContentControl.Triggers>
                </ContentControl>
            </Grid>
            <Grid Height="50">
                <TextBlock Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Width="180"
                           Margin="32, 0, 32, 5"
                           TextAlignment="Center"
                           TextWrapping="Wrap"
                           FontSize="16"
                           Text="{Binding Phase}"/>
            </Grid>
            <ProgressBar Style="{DynamicResource MaterialDesignLinearProgressBar}"
                         Width="120"
                         Height="10"
                         Value="{Binding PartPercent}"
                         IsIndeterminate="{Binding PartPercent, Converter={StaticResource ZeroToTrue}}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Visibility="{Binding Part, Converter={StaticResource NullableToVisibilityConverter}}"
                         Margin="32, 0, 32, 0"/>
            <TextBlock Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                       HorizontalAlignment="Center"
                       Width="180"
                       Margin="32, 0, 32, 0"
                       TextAlignment="Center"
                       FontSize="10"
                       Text="{Binding Part}"
                       Visibility="{Binding Part, Converter={StaticResource NullableToVisibilityConverter}}"/>
            <Button Command="{Binding Close}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DialogButton}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="16, 5, 16, 26"/>
                        <Setter Property="Content" Value="{x:Static resButtons:General.Cancel}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=MainProgress, Path=Value}" Value="100">
                                <Setter Property="Content" Value="{x:Static resButtons:General.Close}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>