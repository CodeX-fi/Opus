<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:resButtons="clr-namespace:Opus.Resources.Buttons;assembly=Opus.Resources">

    <!-- MAIN MENU BUTTON -->
    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignFlatButton}"
           x:Key="MainMenuButton">
        <Setter Property="Command" Value="{Binding NavigateCommand}"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="GroupName" Value="MainMenuB"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="HeaderMenuButton" 
           BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignFlatButton}"
           x:Key="HeaderMenuToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}"
           x:Key="InputPathButton">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}"/>
    </Style>

    <!--DIALOG BUTTONS-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatSecondaryButton}"
           x:Key="DialogButton">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10, 0, 10, 0"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DialogButton}"
           x:Key="DialogSaveButton">
        <Setter Property="Command" Value="{Binding Save}"/>
        <Setter Property="Content" Value="{x:Static resButtons:General.Save}"/>
        <Setter Property="IsDefault" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DialogButton}"
           x:Key="DialogCancelButton">
        <Setter Property="Command" Value="{Binding Close}"/>
        <Setter Property="Content" Value="{x:Static resButtons:General.Cancel}"/>
        <Setter Property="IsCancel" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DialogButton}"
           x:Key="DialogOkButton">
        <Setter Property="Command" Value="{Binding Close}"/>
        <Setter Property="Content" Value="{x:Static resButtons:General.OK}"/>
        <Setter Property="IsDefault" Value="True"/>
    </Style>

    <!--SETTINGS BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="SettingsButton" 
           BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Command" Value="{Binding SettingsCommand}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <md:PackIcon Kind="Cog"
                                 Foreground="{DynamicResource PrimaryHueMidBrush}">
                        <md:PackIcon.LayoutTransform>
                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                        </md:PackIcon.LayoutTransform>
                    </md:PackIcon>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--RADIO BUTTON TAB-->
    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignTabRadioButton}"
           x:Key="TabRadioButton">
        <Setter Property="Cursor" Value="Hand"/>
    </Style>
</ResourceDictionary>